!function(){"use strict";function e(e,o,s,r){function t(e){$("#modal").find("img").attr("src",e),$("#modal").modal("toggle")}function n(){r.jsonp("https://api.vk.com/method/newsfeed.search?q="+o.query+"&start_from="+o.nextFrom+"&extended=1&count=10&access_token=4b11817f4b11817f4ba1ba52444b5d957644b114b11817f13a8738adef1c8ce7b2ee0ca&v=5.62",function(e){var s=o.groups,r=o.profiles;e.response.groups.forEach(function(e,o,r){s[e.id]=e}),e.response.profiles.forEach(function(e,o,s){r[e.id]=e}),o.groups=s,o.profiles=r,o.posts=o.posts.concat(e.response.items),o.query=c.query,c.posts=o.posts,o.nextFrom=e.response.next_from},function(){s.show("Something goes wrong. Sorry about that :(")})}var c=this;c.groups=o.groups,c.profiles=o.profiles,c.posts=o.posts,c.loadMore=n,c.showPhoto=t}angular.module("ngVkNewsfeedSearch").config(["$routeProvider",function(e){e.when("/search",{templateUrl:"NewsfeedsView/newsfeeds-view.html",controller:"NewsfeedsViewCtrl",controllerAs:"vm"})}]).controller("NewsfeedsViewCtrl",["$scope","Database","Alerts","HTTP",e])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5ld3NmZWVkc1ZpZXcvbmV3c2ZlZWRzLXZpZXcuanMiXSwibmFtZXMiOlsiTmV3c2ZlZWRzVmlld0N0cmwiLCIkc2NvcGUiLCJEYXRhYmFzZSIsIkFsZXJ0cyIsIkhUVFAiLCJzaG93UGhvdG8iLCJzcmMiLCIkIiwiZmluZCIsImF0dHIiLCJtb2RhbCIsImxvYWRNb3JlIiwianNvbnAiLCJxdWVyeSIsIm5leHRGcm9tIiwicmVzcG9uc2UiLCJncm91cHMiLCJwcm9maWxlcyIsImZvckVhY2giLCJpdGVtIiwiaSIsImFyciIsImlkIiwicG9zdHMiLCJjb25jYXQiLCJpdGVtcyIsInZtIiwibmV4dF9mcm9tIiwic2hvdyIsInRoaXMiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJHJvdXRlUHJvdmlkZXIiLCJ3aGVuIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwiY29udHJvbGxlckFzIl0sIm1hcHBpbmdzIjoiQ0FHQyxXQUNHLFlBZUEsU0FBU0EsR0FBa0JDLEVBQVFDLEVBQVVDLEVBQVFDLEdBU2pELFFBQVNDLEdBQVVDLEdBQ2ZDLEVBQUUsVUFBVUMsS0FBSyxPQUFPQyxLQUFLLE1BQU9ILEdBQ3BDQyxFQUFFLFVBQVVHLE1BQU0sVUFHdEIsUUFBU0MsS0FDTFAsRUFBS1EsTUFDRCwrQ0FBaURWLEVBQVNXLE1BQVEsZUFBaUJYLEVBQVNZLFNBQVcsbUhBQzNHLFNBQVNDLEdBQ0wsR0FBSUMsR0FBU2QsRUFBU2MsT0FBUUMsRUFBV2YsRUFBU2UsUUFFbERGLEdBQVNBLFNBQVNDLE9BQU9FLFFBQVEsU0FBU0MsRUFBTUMsRUFBR0MsR0FDL0NMLEVBQU9HLEVBQUtHLElBQU1ILElBRXRCSixFQUFTQSxTQUFTRSxTQUFTQyxRQUFRLFNBQVNDLEVBQU1DLEVBQUdDLEdBQ2pESixFQUFTRSxFQUFLRyxJQUFNSCxJQUd4QmpCLEVBQVNjLE9BQVNBLEVBQ2xCZCxFQUFTZSxTQUFXQSxFQUVwQmYsRUFBU3FCLE1BQVFyQixFQUFTcUIsTUFBTUMsT0FBT1QsRUFBU0EsU0FBU1UsT0FDekR2QixFQUFTVyxNQUFRYSxFQUFHYixNQUVwQmEsRUFBR0gsTUFBUXJCLEVBQVNxQixNQUVwQnJCLEVBQVNZLFNBQVdDLEVBQVNBLFNBQVNZLFdBQ3ZDLFdBQ0N4QixFQUFPeUIsS0FBSywrQ0FwQ3BCLEdBQUlGLEdBQUtHLElBRVRILEdBQUdWLE9BQVNkLEVBQVNjLE9BQ3JCVSxFQUFHVCxTQUFXZixFQUFTZSxTQUN2QlMsRUFBR0gsTUFBUXJCLEVBQVNxQixNQUNwQkcsRUFBR2YsU0FBV0EsRUFDZGUsRUFBR3JCLFVBQVlBLEVBcEJuQnlCLFFBQVFDLE9BQU8sc0JBRVZDLFFBQVEsaUJBQWtCLFNBQVNDLEdBQ2hDQSxFQUFlQyxLQUFLLFdBQ2hCQyxZQUFhLG9DQUNiQyxXQUFZLG9CQUNaQyxhQUFjLFVBSXJCRCxXQUFXLHFCQUFzQixTQUFVLFdBQVksU0FBVSxPQUFRcEMiLCJmaWxlIjoiTmV3c2ZlZWRzVmlldy9uZXdzZmVlZHMtdmlldy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSBydXN0YW1zYWlkb3Ygb24gMDIuMDMuMTcuXG4gKi9cbihmdW5jdGlvbiAoKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgYW5ndWxhci5tb2R1bGUoJ25nVmtOZXdzZmVlZFNlYXJjaCcpXG5cbiAgICAgICAgLmNvbmZpZyhbJyRyb3V0ZVByb3ZpZGVyJywgZnVuY3Rpb24oJHJvdXRlUHJvdmlkZXIpIHtcbiAgICAgICAgICAgICRyb3V0ZVByb3ZpZGVyLndoZW4oJy9zZWFyY2gnLCB7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdOZXdzZmVlZHNWaWV3L25ld3NmZWVkcy12aWV3Lmh0bWwnLFxuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdOZXdzZmVlZHNWaWV3Q3RybCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfV0pXG5cbiAgICAgICAgLmNvbnRyb2xsZXIoJ05ld3NmZWVkc1ZpZXdDdHJsJywgWyckc2NvcGUnLCAnRGF0YWJhc2UnLCAnQWxlcnRzJywgJ0hUVFAnLCBOZXdzZmVlZHNWaWV3Q3RybF0pO1xuXG5cbiAgICBmdW5jdGlvbiBOZXdzZmVlZHNWaWV3Q3RybCgkc2NvcGUsIERhdGFiYXNlLCBBbGVydHMsIEhUVFApIHtcbiAgICAgICAgdmFyIHZtID0gdGhpcztcblxuICAgICAgICB2bS5ncm91cHMgPSBEYXRhYmFzZS5ncm91cHM7XG4gICAgICAgIHZtLnByb2ZpbGVzID0gRGF0YWJhc2UucHJvZmlsZXM7XG4gICAgICAgIHZtLnBvc3RzID0gRGF0YWJhc2UucG9zdHM7XG4gICAgICAgIHZtLmxvYWRNb3JlID0gbG9hZE1vcmU7XG4gICAgICAgIHZtLnNob3dQaG90byA9IHNob3dQaG90bztcblxuICAgICAgICBmdW5jdGlvbiBzaG93UGhvdG8oc3JjKSB7XG4gICAgICAgICAgICAkKFwiI21vZGFsXCIpLmZpbmQoJ2ltZycpLmF0dHIoJ3NyYycsIHNyYyk7XG4gICAgICAgICAgICAkKCcjbW9kYWwnKS5tb2RhbCgndG9nZ2xlJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBsb2FkTW9yZSgpIHtcbiAgICAgICAgICAgIEhUVFAuanNvbnAoXG4gICAgICAgICAgICAgICAgJ2h0dHBzOi8vYXBpLnZrLmNvbS9tZXRob2QvbmV3c2ZlZWQuc2VhcmNoP3E9JyArIERhdGFiYXNlLnF1ZXJ5ICsgJyZzdGFydF9mcm9tPScgKyBEYXRhYmFzZS5uZXh0RnJvbSArICcmZXh0ZW5kZWQ9MSZjb3VudD0xMCZhY2Nlc3NfdG9rZW49NGIxMTgxN2Y0YjExODE3ZjRiYTFiYTUyNDQ0YjVkOTU3NjQ0YjExNGIxMTgxN2YxM2E4NzM4YWRlZjFjOGNlN2IyZWUwY2Emdj01LjYyJyxcbiAgICAgICAgICAgIGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGdyb3VwcyA9IERhdGFiYXNlLmdyb3VwcywgcHJvZmlsZXMgPSBEYXRhYmFzZS5wcm9maWxlcztcblxuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnJlc3BvbnNlLmdyb3Vwcy5mb3JFYWNoKGZ1bmN0aW9uKGl0ZW0sIGksIGFycikge1xuICAgICAgICAgICAgICAgICAgICBncm91cHNbaXRlbS5pZF0gPSBpdGVtO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJlc3BvbnNlLnJlc3BvbnNlLnByb2ZpbGVzLmZvckVhY2goZnVuY3Rpb24oaXRlbSwgaSwgYXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHByb2ZpbGVzW2l0ZW0uaWRdID0gaXRlbTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIERhdGFiYXNlLmdyb3VwcyA9IGdyb3VwcztcbiAgICAgICAgICAgICAgICBEYXRhYmFzZS5wcm9maWxlcyA9IHByb2ZpbGVzO1xuXG4gICAgICAgICAgICAgICAgRGF0YWJhc2UucG9zdHMgPSBEYXRhYmFzZS5wb3N0cy5jb25jYXQocmVzcG9uc2UucmVzcG9uc2UuaXRlbXMpO1xuICAgICAgICAgICAgICAgIERhdGFiYXNlLnF1ZXJ5ID0gdm0ucXVlcnk7XG5cbiAgICAgICAgICAgICAgICB2bS5wb3N0cyA9IERhdGFiYXNlLnBvc3RzO1xuXG4gICAgICAgICAgICAgICAgRGF0YWJhc2UubmV4dEZyb20gPSByZXNwb25zZS5yZXNwb25zZS5uZXh0X2Zyb207XG4gICAgICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBBbGVydHMuc2hvdygnU29tZXRoaW5nIGdvZXMgd3JvbmcuIFNvcnJ5IGFib3V0IHRoYXQgOignKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn0oKSk7Il19
