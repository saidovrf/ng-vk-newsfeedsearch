!function(){"use strict";function e(e,o,r,t){function s(){""!==n.query&&$.ajax({url:"https://api.vk.com/method/newsfeed.search?q="+n.query+"&extended=1&count=10&access_token=4b11817f4b11817f4ba1ba52444b5d957644b114b11817f13a8738adef1c8ce7b2ee0ca&v=5.62",type:"GET",dataType:"jsonp",crossDomain:!0,success:function(o){return console.log(o),0===o.response.count?void alert("Try to enter another phrase to search"):void e.$apply(function(){var e={},s={};o.response.groups.forEach(function(o,r,t){e[o.id]=o}),o.response.profiles.forEach(function(e,o,r){s[e.id]=e}),t.groups=e,t.profiles=s,t.posts=o.response.items,t.query=n.query,t.nextFrom=o.response.next_from,r.path("/search")})}})}var n=this;n.searchPosts=s,n.query="",n.photos=[]}angular.module("ngVkNewsfeedSearch").config(["$routeProvider",function(e){e.when("/",{templateUrl:"SearchView/search-view.html",controller:"SearchViewCtrl",controllerAs:"vm"})}]).controller("SearchViewCtrl",["$scope","$http","$location","Database",e])}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNlYXJjaFZpZXcvc2VhcmNoLXZpZXcuanMiXSwibmFtZXMiOlsiU2VhcmNoVmlld0N0cmwiLCIkc2NvcGUiLCIkaHR0cCIsIiRsb2NhdGlvbiIsIkRhdGFiYXNlIiwic2VhcmNoUG9zdHMiLCJ2bSIsInF1ZXJ5IiwiJCIsImFqYXgiLCJ1cmwiLCJ0eXBlIiwiZGF0YVR5cGUiLCJjcm9zc0RvbWFpbiIsInN1Y2Nlc3MiLCJyZXNwb25zZSIsImNvbnNvbGUiLCJsb2ciLCJjb3VudCIsImFsZXJ0IiwiJGFwcGx5IiwiZ3JvdXBzIiwicHJvZmlsZXMiLCJmb3JFYWNoIiwiaXRlbSIsImkiLCJhcnIiLCJpZCIsInBvc3RzIiwiaXRlbXMiLCJuZXh0RnJvbSIsIm5leHRfZnJvbSIsInBhdGgiLCJ0aGlzIiwicGhvdG9zIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbmZpZyIsIiRyb3V0ZVByb3ZpZGVyIiwid2hlbiIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyJdLCJtYXBwaW5ncyI6IkNBR0MsV0FDRyxZQWVBLFNBQVNBLEdBQWVDLEVBQVFDLEVBQU9DLEVBQVdDLEdBUzlDLFFBQVNDLEtBQ1ksS0FBYkMsRUFBR0MsT0FHUEMsRUFBRUMsTUFDRUMsSUFBSywrQ0FBaURKLEVBQUdDLE1BQVEsbUhBQ2pFSSxLQUFNLE1BQ05DLFNBQVUsUUFDVkMsYUFBYSxFQUNiQyxRQUFTLFNBQVNDLEdBR2QsTUFGQUMsU0FBUUMsSUFBSUYsR0FFb0IsSUFBNUJBLEVBQVNBLFNBQVNHLFVBQ2xCQyxPQUFNLDZDQUlWbEIsR0FBT21CLE9BQU8sV0FDVixHQUFJQyxNQUFhQyxJQUVqQlAsR0FBU0EsU0FBU00sT0FBT0UsUUFBUSxTQUFTQyxFQUFNQyxFQUFHQyxHQUMvQ0wsRUFBT0csRUFBS0csSUFBTUgsSUFFdEJULEVBQVNBLFNBQVNPLFNBQVNDLFFBQVEsU0FBU0MsRUFBTUMsRUFBR0MsR0FDakRKLEVBQVNFLEVBQUtHLElBQU1ILElBR3hCcEIsRUFBU2lCLE9BQVNBLEVBQ2xCakIsRUFBU2tCLFNBQVdBLEVBRXBCbEIsRUFBU3dCLE1BQVFiLEVBQVNBLFNBQVNjLE1BQ25DekIsRUFBU0csTUFBUUQsRUFBR0MsTUFFcEJILEVBQVMwQixTQUFXZixFQUFTQSxTQUFTZ0IsVUFFdEM1QixFQUFVNkIsS0FBSyxnQkEzQy9CLEdBQUkxQixHQUFLMkIsSUFFVDNCLEdBQUdELFlBQWNBLEVBQ2pCQyxFQUFHQyxNQUFRLEdBQ1hELEVBQUc0QixVQWxCUEMsUUFBUUMsT0FBTyxzQkFFVkMsUUFBUSxpQkFBa0IsU0FBU0MsR0FDaENBLEVBQWVDLEtBQUssS0FDaEJDLFlBQWEsOEJBQ2JDLFdBQVksaUJBQ1pDLGFBQWMsVUFJckJELFdBQVcsa0JBQW1CLFNBQVUsUUFBUyxZQUFhLFdBQVl6QyIsImZpbGUiOiJTZWFyY2hWaWV3L3NlYXJjaC12aWV3LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHJ1c3RhbXNhaWRvdiBvbiAwMi4wMy4xNy5cbiAqL1xuKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBhbmd1bGFyLm1vZHVsZSgnbmdWa05ld3NmZWVkU2VhcmNoJylcblxuICAgICAgICAuY29uZmlnKFsnJHJvdXRlUHJvdmlkZXInLCBmdW5jdGlvbigkcm91dGVQcm92aWRlcikge1xuICAgICAgICAgICAgJHJvdXRlUHJvdmlkZXIud2hlbignLycsIHtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ1NlYXJjaFZpZXcvc2VhcmNoLXZpZXcuaHRtbCcsXG4gICAgICAgICAgICAgICAgY29udHJvbGxlcjogJ1NlYXJjaFZpZXdDdHJsJyxcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bSdcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XSlcblxuICAgICAgICAuY29udHJvbGxlcignU2VhcmNoVmlld0N0cmwnLCBbJyRzY29wZScsICckaHR0cCcsICckbG9jYXRpb24nLCAnRGF0YWJhc2UnLCBTZWFyY2hWaWV3Q3RybF0pO1xuXG5cbiAgICBmdW5jdGlvbiBTZWFyY2hWaWV3Q3RybCgkc2NvcGUsICRodHRwLCAkbG9jYXRpb24sIERhdGFiYXNlKSB7XG4gICAgICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICAgICAgdm0uc2VhcmNoUG9zdHMgPSBzZWFyY2hQb3N0cztcbiAgICAgICAgdm0ucXVlcnkgPSAnJztcbiAgICAgICAgdm0ucGhvdG9zID0gW107XG5cblxuXG4gICAgICAgIGZ1bmN0aW9uIHNlYXJjaFBvc3RzKCkge1xuICAgICAgICAgICAgaWYgKHZtLnF1ZXJ5ID09PSAnJykgcmV0dXJuO1xuXG5cbiAgICAgICAgICAgICQuYWpheCh7XG4gICAgICAgICAgICAgICAgdXJsOiAnaHR0cHM6Ly9hcGkudmsuY29tL21ldGhvZC9uZXdzZmVlZC5zZWFyY2g/cT0nICsgdm0ucXVlcnkgKyAnJmV4dGVuZGVkPTEmY291bnQ9MTAmYWNjZXNzX3Rva2VuPTRiMTE4MTdmNGIxMTgxN2Y0YmExYmE1MjQ0NGI1ZDk1NzY0NGIxMTRiMTE4MTdmMTNhODczOGFkZWYxYzhjZTdiMmVlMGNhJnY9NS42MicsXG4gICAgICAgICAgICAgICAgdHlwZTogJ0dFVCcsXG4gICAgICAgICAgICAgICAgZGF0YVR5cGU6ICdqc29ucCcsXG4gICAgICAgICAgICAgICAgY3Jvc3NEb21haW46IHRydWUsXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSlcbiAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5yZXNwb25zZS5jb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYWxlcnQoJ1RyeSB0byBlbnRlciBhbm90aGVyIHBocmFzZSB0byBzZWFyY2gnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBncm91cHMgPSB7fSwgcHJvZmlsZXMgPSB7fTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UucmVzcG9uc2UuZ3JvdXBzLmZvckVhY2goZnVuY3Rpb24oaXRlbSwgaSwgYXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ3JvdXBzW2l0ZW0uaWRdID0gaXRlbTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UucmVzcG9uc2UucHJvZmlsZXMuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpLCBhcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9maWxlc1tpdGVtLmlkXSA9IGl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YWJhc2UuZ3JvdXBzID0gZ3JvdXBzO1xuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YWJhc2UucHJvZmlsZXMgPSBwcm9maWxlcztcblxuICAgICAgICAgICAgICAgICAgICAgICAgRGF0YWJhc2UucG9zdHMgPSByZXNwb25zZS5yZXNwb25zZS5pdGVtcztcbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFiYXNlLnF1ZXJ5ID0gdm0ucXVlcnk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIERhdGFiYXNlLm5leHRGcm9tID0gcmVzcG9uc2UucmVzcG9uc2UubmV4dF9mcm9tO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAkbG9jYXRpb24ucGF0aCgnL3NlYXJjaCcpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn0oKSk7Il19
